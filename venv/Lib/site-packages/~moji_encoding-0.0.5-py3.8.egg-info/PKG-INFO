Metadata-Version: 2.1
Name: emoji-encoding
Version: 0.0.5
Summary: Module providing Emoji encoding for Python
Home-page: https://github.com/suda/python-emoji-encoding
Author: Wojtek Siudzinski
Author-email: admin@suda.pl
License: MIT
Description: # Emoji encoding for üêç
        
        This module provides a custom source code encoding allowing usage of Emoji's for things like variable names or function names.
        
        ## Usage
        
        Install the package with pip:
        ```
        pip install emoji-encoding
        ```
        **It's recommended to install it in [a virtualenv](https://virtualenv.readthedocs.org/en/latest/)**
        
        After installation you can specify the encoding in the beginning of a Python file:
        
        ```python
        # -*- coding: emoji -*-
        def üì¢(‚úâÔ∏è):
            print(‚úâÔ∏è)
        
        üì¢("‚úã üåè")
        ```
        
        ## Uninstalling
        
        This package will create `emoji.pth` file in your `site-packages` directory to autoload the codec. After removing the module you need to remove this file manually.
        
        ## Known issues
        
        Currently the encoding is only available in imported modules so trying to run Emoji encoded file directly will fail:
        
        ```
        $ python emoji.py
          File "emoji.py", line 1
        SyntaxError: encoding problem: emoji
        ```
        
        Easy workaround is to have an another file that imports the Emoji encoded file:
        
        ```shell
        $ cat bootstrap.py
        import emoji
        $ python bootstrap.py
        ‚úã üåè
        ```
        
        ## History
        
        It all started with Ola Sendecka's talk about [Emoji Driven Development](https://speakerdeck.com/jezdezcon/ola-sendecka-emoji-driven-development) which made me wonder: "why *can't* we use Emoji's in Python?". After a bit of hacking I was able to use them [with a patched cpython](https://twitter.com/suda/status/614814994367168512). This wasn't a perfect solution so playing with this idea I ended up with custom [codec](https://docs.python.org/3/library/codecs.html) that translates Emoji's to their ASCII representations and adds prefix/suffix to decode such unique string back to Unicode.
        
Keywords: emoji codec encoding
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Provides-Extra: dev
Provides-Extra: test
